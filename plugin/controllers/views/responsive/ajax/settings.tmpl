#from Plugins.Extensions.OpenWebif.controllers.i18n import tstrings

<!-- TODO: move styles to css file -->
<style>
.theme--city-lights #bookmarks button {
  color: #f1f1f1;
  border: 1px solid rgba(241, 241, 241, 0.2);
  background-color: rgba(241, 241, 241, 0.2);
  border-radius: 2px;
}

.theme--city-lights #bookmarks button:hover { 
  background-color: rgba(241,241,241,.3);
}

.theme--city-lights #bookmarks button:active { 
  background-color: rgba(241,241,241,.1);
}

.theme--city-lights #bookmarks a {
  color: #f1f1f1;
}

#bookmarks a {
  color: #f1f1f1;
}

#bookmarks a:focus,
#bookmarks a:hover {
	text-decoration: none;
}

#bookmarks button {
  margin: 4px 2px 0 0;
  user-select: none;
  transition-duration: 0.2s;
}

#bookmarks .material-icons-centered {
  font-size: 20px;
  margin: 2px;
}
</style>

<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
	<div class="card">
		<div class="header">
			<div class="row clearfix">
				<div class="col-xs-12 col-sm-8 col-md-9">
					<h2 id="configtitle"><i class="material-icons material-icons-centered">settings</i>$tstrings['settings']</h2>
				</div>
				<div class="col-xs-12 hidden-sm hidden-md hidden-lg hidden-xl">
					<div class="row vti-vspace-20"></div>
				</div>
				<div class="col-xs-12 col-sm-4 col-md-3">
					<select id="settingselection" class="form-control">
						<option value="packagemenu">$tstrings['packages']</option>
						<option value="bookmarksmenu">$tstrings['bookmarks']</option>
				#for $sec in $configsections
					<option value="$sec['key']">$sec["description"]</option>
				#end for
					</select>
				</div>
			</div>
		</div>
		<div class="body" >
			<div id="content_main" class="m-t-40">
				<div id="info">
					<div id="scontent"></div>
					<div style="display:none" id="thistitlebookmarks">
						<i class='material-icons material-icons-centered'>settings</i>
						$tstrings['settings'] - $tstrings['bookmarks']
					</div>
					<div id="bookmarks" class="m-t--20" style="display:none;">
						<div id="content_main2">
							<table id="configuration" class="table table-striped table-hover form-group" style="width: auto;">
								<tr>
									<th colspan="100%">$tstrings['bookmarks']</th>
								</tr>
#for $location in $locations
								<tr>
									<td>
										<i class="material-icons material-icons-centered">folder_open</i>
	#set $dirs = $location.split("/")[1:]
	#for $dir in $dirs
										<span class="p-r-5 p-l-5">/</span>
										$dir
	#end for
									</td>
									<td>
										<a href="#" onclick="deleteBookmark('$location'); return false;" title="">
											<div>
												<i class='material-icons material-icons-centered'>remove</i>
											</div>
										</a>
									</td>
								</tr>
#end for
								<tr>
									<th colspan="100%">$tstrings['new_bookmark']</th>
								</tr>
								<tr>
									<td><!-- TODO: i10n -->
										<div class=form-line>
											<input type="text" name="addbookmarktext" value="" id="addbookmarktext" placeholder="$tstrings['bookmark_path']" required class="form-control inactive">
										</div>
									</td>
									<td>
										<a href="#" onclick="addBookmark(); return false;">
											<div>
												<i class='material-icons material-icons-centered'>add</i>
											</div>
										</a>
									</td>
								</tr>
							</table>
						</div>
					</div>
					<div style="display:none" id="thistitlepackages"><i class='material-icons material-icons-centered'>settings</i>$tstrings['settings'] - $tstrings['packages']</div>
					<div id='packages' style="display:none;">
						<div id="content_main2">
							<div class="row clearfix">
								<div class="col-xs-12">
									<ul class="nav nav-tabs" >
										<li><a data-toggle="tab" href='#tab' class="pkgbtn" id='pkgbtn1' >$tstrings['update']</a></li>
										<li><a data-toggle="tab" href='#tab' class="pkgbtn" id='pkgbtn2' >$tstrings['installed']</a></li>
										<li><a data-toggle="tab" href='#tab' class="pkgbtn" id='pkgbtn3' >$tstrings['all']</a></li>
										<li><a data-toggle="tab" href='#tab' class="pkgbtn" id='pkgbtn4' >$tstrings['more']</a></li>
									</ul>
								</div>
							</div>
							<div class="row clearfix" id="pkgmore">
								<div class="col-xs-12">
									<div class="card">
										<div class="body" >
											<div class="row clearfix">
												<div class="col-xs-12">
													<div class="row clearfix align-center">
														<div class="col-xs-12 col-sm-6 col-md-4">
															<button id="updatefeed" type="button" class="btn waves-effect responsivebtn btn--skinned">$tstrings['update_feed']</button>
														</div>
														<div class="col-xs-12 col-sm-6 col-md-4">
															<button id="upgrade" type="button" class="btn waves-effect responsivebtn btn--skinned">$tstrings['upgrade_packages']</button>
														</div>
														<span id="pkguploadOne">
															<div class="col-xs-12 col-sm-6 col-md-4">
																<button id="selectfile" type="button" class="btn waves-effect responsivebtn btn--skinned">$tstrings['select_ipk_upload']</button>
															</div>
														</span>
													</div>
													<span id="pkguploadTwo">
														<div class="row clearfix">
															<div class="col-xs-12">
																<i class="material-icons material-icons-centered">folder_open</i>
																$tstrings['uploaded_files']:
															</div>
														</div>
														<div class="row clearfix">
															<div class="col-xs-12">
																<ul id='tmpfiles'></ul>
																<form id="uploadpkg" style="display:none" action="uploadpkg" method="post" enctype="multipart/form-data" encoding="multipart/form-data">
																	<input type="file" name="rfile" id="rfile" maxlength="100000">
																	<input type="hidden" name="filename" id="filename">
																</form>
															</div>
														</div>
													</span>
													<div id="resulttext"></div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
							<div class="row clearfix" id="tblpackages">
								<div class="col-xs-12">
									<div class="tab-content">
										<div class="card">
											<div class="body" >
												<div class="tab-pane active" id="tab">
													<div class="row clearfix form-group">
														<div class="col-xs-1 align-right">
															<i class='material-icons material-icons-centered'>search</i>
														</div>
														<div class="col-xs-6 col-sm-4 align-left">
															<div class="form-line"><!-- TODO: i10n -->
																<input type="text" name="searchpk" id="searchpk" class="form-control inactive" placeholder="SEARCH ...">
															</div>
														</div>
													</div>
													<div class="row clearfix">
														<ul id="packagelist">
															<div class="col-xs-12 align-center">
																<div class="loader">
																	<div class="preloader">
																		<div class="spinner-layer spinner--skinned pl--skinned">
																			<div class="circle-clipper left">
																				<div class="circle"></div>
																			</div>
																			<div class="circle-clipper right">
																				<div class="circle"></div>
																			</div>
																		</div>
																	</div>
																	<p>$tstrings['loading']...</p>
																</div>
															</div>
														</ul>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	var str_db = "$tstrings['delete_bookmark']";

	// TODO minimize js

	var filteredpkg;
	var filterval = '';

	var thisspinner = "<div class='col-xs-12 align-center'><div class='loader'><div class='preloader'><div class='spinner-layer pl'><div--skinned class='circle-clipper left'><div class='circle'></div></div><div class='circle-clipper right'><div class='circle'></div></div></div></div><p>" + tstr_loading + "...</p></div>";

	function prepareUpload() {
		var fn = jQuery(this).val();
		fn = fn.replace('C:\\fakepath\\','');
		swal({
				title: tstrings_upload_package,
				text: fn,
				type: "warning",
				showCancelButton: true,
				confirmButtonColor: "#DD6B55",
				confirmButtonText: tstrings_yes,
				cancelButtonText: tstrings_no_cancel,
				closeOnConfirm: true,
				closeOnCancel: true
			}, function (isConfirm) {
				if (isConfirm) {
					var frm = document.forms["uploadpkg"];
					frm.filename.value = fn;

					jQuery('form#uploadpkg')
						.unbind('submit')
						.submit(function (e) 
					{
						var formData = new FormData(this);
						jQuery.ajax({
							url: '/ipkg/upload',
							type: 'POST',
							data: formData,
							mimeType:"multipart/form-data",
							contentType: false,
							cache: false,
							processData:false,
							dataType: 'json',
							success: function (data, textStatus, jqXHR) {
								var r = data.Result;
								if (r[0]!=true) {
									alert(tstrings_upload_error + ": " + r[1]);
								}
								ShowPackages('pkgbtn4');
							},
							error: function (jqXHR, textStatus, errorThrown) {
								alert(tstrings_upload_error + ": " + errorThrown);
								ShowPackages('pkgbtn4');
							}
						});
						e.preventDefault();
						try {
							e.unbind();
						} catch(e){}
					});
					jQuery('form#uploadpkg').submit();
				} else {
					swal(tstrings_cancelled, tstrings_upload_package, "error");
				}
			});
	}
	function getPkgFilename(){
		var frm = document.forms["form_uploadpkg"];
		frm.filename.value = frm.file.value;
	}

	function ShowFilterPackages()
	{
		var row='';
		jQuery.each( filteredpkg, function( key, val ) {
			var name = val['name'];
			var desc = val['d'];
			if(filterval=== '' || name.toLowerCase().search(filterval.toLowerCase()) !== -1 || desc.toLowerCase().search(filterval.toLowerCase()) !== -1) {
				var upd = (val['u'] == '0') ? "":val['u'];
				var i = val['i'];
				var sel = (i == '1') ? "class='installed' ":"";
				if(i == '1' && val['u'] != '0')
					i = '2';
				var ico = (i == '1') ? "delete_forever":"get_app";
				if(upd!='') {
					upd = " -> " + upd;
					ico = "system_update"
				}
				row += "<li "+sel+"data-i='"+i+"' data-n='"+name+"'><a href='#' class='list-group-item list-group-item-action'><i class='material-icons material-icons-centered'>" + ico + "</i><div>" + name +" (" + val['v'] + upd +")<br><span>" + desc + "</span></div></a></li>";
			}
		});
		jQuery("#packagelist").html(row);
		
		jQuery('#packagelist > li').click( function () {
			ask(jQuery(this),false);
		});
	}

	function FillPackages(pkgs,mode)
	{
		var _update = jQuery.grep(pkgs, function(v) {
			return (v.u != '0');
		});
		var _installed = jQuery.grep(pkgs, function(v) {
			return (v.i == '1');
		});

		if (mode == 'pkgbtn1')
			filteredpkg = _update.slice();
		else if (mode == 'pkgbtn2') {
			filteredpkg = _installed.slice();
		} else
			filteredpkg = pkgs.slice();

		ShowFilterPackages();

	}

	function ask(obj,man)
	{
			var pk = jQuery(obj).html();
		var i = jQuery(obj).data('i');
		if(!man) {
			pk = jQuery(obj).data('n');
		}
		
		var cmd = '';

		if(i=='1') {
			confirm_txt = tstrings_remove_package
			cmd = 'remove&package=' + pk;
		} else if (i=='2') {
			confirm_txt = tstrings_update_package
				cmd = 'install&package=' + pk;
		} else {
			confirm_txt = tstrings_install_package
			cmd = 'install&package=' + pk;
		}
		
		if(cmd != '')
		{
			swal({
				title: confirm_txt,
				text: pk,
				type: "warning",
				showCancelButton: true,
				confirmButtonColor: "#DD6B55",
				confirmButtonText: tstrings_yes,
				cancelButtonText: tstrings_no_cancel,
				closeOnConfirm: true,
				closeOnCancel: true
			}, function (isConfirm) {
				if (isConfirm) {
					Action('/ipkg?command='+cmd,'true');
					jQuery("#tblpackages").hide();
					jQuery("#pkgmore").show();
					jQuery('#pkgbtn4').prop('checked', true); 
				} else {
					swal(tstrings_cancelled, confirm_txt, "error");
				}
			});
		}
	}

	function Action(action,rl)
	{
		jQuery('#pkgbtn4').click();
		jQuery('#resulttext').html(thisspinner);
		jQuery.ajax({
			url: action,
			success: function ( data ) {
				var txt = data.replace('<html><body>','').replace('</body></html>','').replace(/<br>/g,'');
				jQuery('#resulttext').html('<pre>' + txt + '</pre>');
				if(rl !== undefined) {
					SetLSValue('pkg-date','');
				}
			},
			error: function ( data ) {
				var txt = data.replace('<html><body>','').replace('</body></html>','').replace(/<br>/g,'');
				jQuery('#resulttext').html(data);;
			}
		});
	}

	function ShowPackages(mode)
	{
		jQuery("#tblpackages").hide();
		if (mode == 'pkgbtn4') {
			jQuery("#pkgmore").show();
			jQuery('#tmpfiles').empty();
			jQuery.ajax({
				url: '/ipkg?command=tmp',
				dataType: 'json',
				success: function (data) {
					var files = '';
					jQuery.each( data.ipkfiles, function( key, val ) {
						files += "<li><a href='#' class='list-group-item list-group-item-action'><i class='material-icons material-icons-centered'>get_app</i><span>/tmp/" + val['name'] + "</span></a></li>";
					});
					jQuery('#tmpfiles').html(files);
					jQuery('#tmpfiles > li ').click( function () {
						ask(jQuery(this).parent().find('span'),true);
					});
					if ( files === '' ) {
						jQuery('#pkguploadTwo').hide();
					} else {
						jQuery('#pkguploadTwo').show();
					}
					
				}
			});
			return;
		}

		jQuery("#pkgmore").hide();
		jQuery("#tblpackages").show();

		var date = new Date();
		date = date.getFullYear()+"-"+(date.getMonth()+1)+"-"+date.getDate()+date.getHours();

		var cache = GetLSValue('pkg-date','')
		if(cache === date) {
			cache = GetLSValue('pkg-data',null);
			if(cache != null) {
				var pkgs = JSON.parse(cache);
				FillPackages(pkgs,mode);
				return;
			}
		}

		jQuery.ajax({
			url: '/ipkg?command=listall',
			dataType: 'json',
			success: function ( data ) {
				var sdata = JSON.stringify(data);
				SetLSValue('pkg-date',date);
				SetLSValue('pkg-data',sdata);
				FillPackages(data,mode);
			}
		});
	}

	jQuery(function() {
		jQuery('#settingselection').on('change', function (e) {
			var optionSelected = jQuery("option:selected", this);
			var valueSelected = this.value;
			jQuery("#bookmarks").hide();
			jQuery("#scontent").hide();
			jQuery("#packages").hide();
			if(valueSelected == 'packagemenu')
			{
				jQuery("#packages").show();
				ShowPackages('pkgbtn4');
				jQuery("#configtitle").html(jQuery('#thistitlepackages').html());
				document.getElementById("pkgbtn4").click();
			}
			else if(valueSelected == 'bookmarksmenu')
			{
				jQuery("#configtitle").html(jQuery('#thistitlebookmarks').html());
				jQuery("#bookmarks").show();
			} else {
				jQuery("#scontent").show();
				jQuery("#scontent").load('ajax/config?section=' + valueSelected, function () {
					jQuery("#scontent").find("#content_main").attr("id","content_main1");
				});
			}
		});

		jQuery('#settingselection').val('usage');

		jQuery("#scontent").load('ajax/config?section=usage', function () {
			jQuery("#scontent").find("#content_main").attr("id","content_main1");
		});

		jQuery('#tb2').buttonset();
		jQuery('#tb3').buttonset();
		jQuery('.pkgbtn').click(function () { ShowPackages(jQuery(this).attr('id')); });
		jQuery('#selectfile').click(function () {jQuery("#rfile").trigger('click'); });
		jQuery('#rfile').change(prepareUpload);
		jQuery('#updatefeed').click(function () {
			Action('/ipkg?command=update',true); });
		jQuery('#upgrade').click(function () {
			Action('/ipkg?command=upgrade','true'); });
		
		jQuery('#searchpk').focus(function () { 
			if (jQuery(this).val() === '...') {
				jQuery(this).val('');
			}
		}).keyup(function (){
			if (jQuery(this).data('val') !== this.value) {
				filterval=this.value;
				ShowFilterPackages();
			}
			jQuery(this).data('val', this.value);
		}); /*.blur(function (){
			filterval='';
			jQuery(this).data('val', '');
			if (jQuery(this).val() === '') {
				jQuery(this).val('...');
			}
		});
		*/
	});

	function deleteBookmark(bm) {
		if (confirm(str_db + ' (' + bm + ') ?') === false) {
			return;
		}

		jQuery.ajax({
			url: "/api/removelocation?dirname=" + bm,
			dataType: "json",
			success: function(loc) {
				if (loc.result)
					load_maincontent_spin("/ajax/settings");
				else
					alert(loc.message);
			}
		});
	}

	function addBookmark() {
		bm = jQuery("#addbookmarktext").val();

		if(bm.length==0 || bm.includes(" ")) {
			alert("Path Error");
			return;
		}

		jQuery.ajax({
			url: "/api/addlocation?dirname=" + bm,
			dataType: "json",
			success: function(loc) {
				if (loc.result)
					load_maincontent_spin("/ajax/settings");
				else
					alert(loc.message);
			}
		});
	}

	jQuery.AdminBSB.input.activate();

#if $allowipkupload
	var noupload=true;
#else
	jQuery(function() {
		jQuery("#pkguploadOne").hide();
		jQuery("#pkguploadTwo").hide();
	});
	var noupload = false;
#end if
</script>
